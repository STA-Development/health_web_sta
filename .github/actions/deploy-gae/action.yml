name: 'Deploy to Google App Engine'
inputs:
  node_version:
    description: 'Node version'
    required: false
    default: v12.18.4

runs:
  using: 'composite'
  steps:
    - name: Install Modules
      run: |
        echo "::group::Install npm modules"
        yarn install --ignore-scripts
        npm install --prefix ./cypress/tools
        echo "::endgroup::"

      shell: bash

    - name: Define Deployment Variables
      run: |
        EVENT_NAME=${{ github.event_name }}
        EVENT_ACTION=${{ github.event.action }}
        RELEASE_REF=refs/tags/release
        PRERELEASE_REF=refs/tags/prerelease

        QA1_RELEASE_REF=refs/heads/release

        echo "::group::Define Deployment Variables"
        if [[ "$GITHUB_REF" == *"$PRERELEASE_REF"* ]] && [[ $EVENT_NAME == 'release' ]] && [[ $EVENT_ACTION == 'prereleased' ]]; then
          echo "Deploy to PREPROD"
          echo "PROJECT_ID=fh-health-preprod" > $GITHUB_ENV
          echo "ENV_SERVICE_ACCOUNT=preprod_service_account" >> $GITHUB_ENV
          echo "PROMOTEFLAG=--promote" >> $GITHUB_ENV
        elif [[ "$GITHUB_REF" == *"$RELEASE_REF"* ]] && [[ $EVENT_NAME == 'release' ]] && [[ $EVENT_ACTION == 'released' ]]; then
          echo "Deploy to PROD"
          echo "PROJECT_ID=fh-health-ca-prod" > $GITHUB_ENV
          echo "ENV_SERVICE_ACCOUNT=prod_service_account" >> $GITHUB_ENV
          echo "PROMOTEFLAG=--no-promote" >> $GITHUB_ENV
        elif [[ "$GITHUB_REF" == *"$QA1_RELEASE_REF"* ]]; then
          echo "Deploy to QA1"
          echo "PROJECT_ID=fh-health-qa1" > $GITHUB_ENV
          echo "ENV_SERVICE_ACCOUNT=qa1_service_account" >> $GITHUB_ENV
          echo "PROMOTEFLAG=--promote" >> $GITHUB_ENV
        else
          echo "Deploy to DEV"
          echo "PROJECT_ID=fh-health-dev" > $GITHUB_ENV
          echo "ENV_SERVICE_ACCOUNT=dev_service_account" >> $GITHUB_ENV
          echo "PROMOTEFLAG=--promote" >> $GITHUB_ENV
        fi

        echo "::endgroup::"
      shell: bash

    - name: Deploy to GAE
      run: |
        echo "::group::Auth with GCLOUD"
        cat >> service-account.json << EOF
        ${{ env[env.ENV_SERVICE_ACCOUNT] }}
        EOF
        echo "Deploying to: ${{ env.PROJECT_ID }}"
        gcloud auth activate-service-account --key-file=./service-account.json --project=${{ env.PROJECT_ID }}
        rm ./service-account.json
        echo "::endgroup::"

        echo "::group::Add Application Environment Variables"
        gcloud secrets versions access latest --secret=FH_HEALTH_WEB_SECRETS > ./.env
        echo "::endgroup::"

        echo "::group::Run Eslint"
        yarn run lint
        echo "::endgroup::"

        echo "::group::Build"
        yarn build
        echo "::endgroup::"

        echo "::group::Deploy to GAE"
        gcloud app deploy ./dist --quiet ${{ env.PROMOTEFLAG }}
        echo "::endgroup::"

      shell: bash
