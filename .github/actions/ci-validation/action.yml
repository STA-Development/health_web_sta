name: 'e2e tests processing'
inputs:
  node_version:
    description: 'Node version'
    required: false
    default: v12.22.1
  pat_to_read_package:
    description: 'Pat to read Packages'
    required: true

description: 'e2e test action'
runs:
  using: 'composite'
  steps:
    - name: Install Modules
      run: |
        echo "::group::Activate NodeJs version manager and install version"
        export NVM_DIR=~/.nvm
        source ~/.nvm/nvm.sh
        nvm install ${{ inputs.node_version }}
        nvm use ${{ inputs.node_version }}
        echo "::endgroup::"

        echo "::group::Install yarn modules"
        echo "@shopthing-opn-shared:registry=https://npm.pkg.github.com/" > .npmrc
        yarn install --ignore-scripts
        npm install --prefix ./cypress/tools
        echo "::endgroup::"
      shell: bash

    - name: Static code analysis and build
      run: |
        echo "::group::Run Eslint"
        yarn run lint
        echo "::endgroup::"

        echo "::group::Build"
        yarn build
        echo "::endgroup::"
      shell: bash

    - name: Define Deployment Variables
      run: |
        echo "::group::Define Deployment Variables"
        echo "Use DEV service account"
        echo "PROJECT_ID=${{ env.dev_project_id }}" > $GITHUB_ENV
        echo "ENV_SERVICE_ACCOUNT=dev_service_account" >> $GITHUB_ENV
        echo "PROMOTEFLAG=--promote" >> $GITHUB_ENV
        echo "::endgroup::"
      shell: bash

    - name: Run Project and Cypress
      run: |
        EVENT_NAME=${{ github.event_name }}

        echo "::group::Activate NodeJs version manager and select version"
        export NVM_DIR=~/.nvm
        source ~/.nvm/nvm.sh
        nvm use ${{ inputs.node_version }}
        echo "::endgroup::"

        echo "::group::Auth with GCLOUD"
        cat >> service-account.json << EOF
        ${{ env[env.ENV_SERVICE_ACCOUNT] }}
        EOF
        echo "Using PROJECT_ID: ${{ env.PROJECT_ID }}"
        gcloud auth activate-service-account --key-file=./service-account.json --project=${{ env.PROJECT_ID }}
        rm ./service-account.json
        echo "::endgroup::"

        echo "::group::Add Application Environment Variables"
        echo "Writing Environment Variables to: .env"
        gcloud secrets versions access latest --secret=FH_HEALTH_WEB_SECRETS > .env
        echo "Writing Environment Variables to: .env.e2e"
        gcloud secrets versions access latest --secret=FH_HEALTH_E2E_SECRETS > .env.e2e

        echo "Set Cypress record key from the e2e secret"
        read_var() {
            VAR=$(grep $1 $2 | xargs)
            IFS="=" read -ra VAR <<< "$VAR"
            echo ${VAR[1]}
        }
        export CYPRESS_RECORD_KEY=$(read_var cypressRecordKey .env.e2e)
        echo "::endgroup::"

        echo "::group::Run Project and Cypress"
        yarn run cypress:ci
        echo "::endgroup::"

      shell: bash
